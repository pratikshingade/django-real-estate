#!/usr/bin/env bash

# Exit immediately if a command exits with a non-zero status
set -o errexit
set -o pipefail
set -o nounset

# Function to check PostgreSQL readiness
postgres_ready() {
python << END
import sys
import psycopg2
try:
    psycopg2.connect(
        dbname="${POSTGRES_DB}",
        user="${POSTGRES_USER}",
        password="${POSTGRES_PASSWORD}",
        host="${POSTGRES_HOST}",
        port="${POSTGRES_PORT}",
    )
except psycopg2.OperationalError:
    sys.exit(-1)
sys.exit(0)
END
}

# Wait for PostgreSQL to be ready
echo "Checking PostgreSQL readiness..."
timeout=30
start_time=$(date +%s)

until postgres_ready; do
    >&2 echo "Waiting for PostgreSQL to become available..."
    sleep 1

    # Timeout after 30 seconds
    current_time=$(date +%s)
    if [ $((current_time - start_time)) -ge $timeout ]; then
        >&2 echo "Error: Timeout while waiting for PostgreSQL to become available."
        exit 1
    fi
done

>&2 echo "PostgreSQL is ready!"

# Execute the provided command
exec "$@"
