
services:
  api:
    build:
      context: .
      dockerfile: ./docker/local/django/Dockerfile
    command: /start
    volumes:
      - .:/app
      - static_volume:/app/staticfiles
      - media_volume:/app/mediafiles
    expose:
      - "8000"
    env_file:
      - .env
    depends_on:
      postgres-db:
        condition: service_healthy
      redis:
        condition: service_started
    networks:
      - estate-react

  client:
    build:
      context: ./client
      dockerfile: ./docker/local/Dockerfile
    restart: on-failure
    volumes:
      - ./client:/app
      - /app/node_modules
    expose:
      - "5173"
    networks:
      - estate-react
    depends_on:
      - api

  postgres-db:
    image: postgres:17.2-alpine
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    networks:
      - estate-react
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}" ]
      interval: 10s
      retries: 5
      timeout: 5s

  redis:
    image: redis:7-alpine
    networks:
      - estate-react
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 5s
      retries: 3
      timeout: 3s

  celery_worker:
    build:
      context: .
      dockerfile: ./docker/local/django/Dockerfile
    command: /start-celeryworker
    volumes:
      - .:/app
    env_file:
      - .env
    depends_on:
      redis:
        condition: service_healthy
      postgres-db:
        condition: service_healthy
    networks:
      - estate-react

  flower:
    build:
      context: .
      dockerfile: ./docker/local/django/Dockerfile
    command: /start-flower
    volumes:
      - .:/app
    env_file:
      - .env
    ports:
      - "5555:5555"
    depends_on:
      redis:
        condition: service_healthy
      postgres-db:
        condition: service_healthy
    networks:
      - estate-react

  nginx:
    build:
      context: ./docker/local/nginx
      dockerfile: Dockerfile
    restart: always
    depends_on:
      - api
      - client
    volumes:
      - static_volume:/app/staticfiles
      - media_volume:/app/mediafiles
    ports:
      - "8080:80"
    networks:
      - estate-react

networks:
  estate-react:
    driver: bridge

volumes:
  postgres_data:
  static_volume:
  media_volume:
